/* tslint:disable */
/* eslint-disable */
/**
 * SUT SA Example API
 * This is a sample server for SUT SE 2563
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    EntActivity,
    EntActivityFromJSON,
    EntActivityFromJSONTyped,
    EntActivityToJSON,
    EntClubTypes,
    EntClubTypesFromJSON,
    EntClubTypesFromJSONTyped,
    EntClubTypesToJSON,
    EntLocation,
    EntLocationFromJSON,
    EntLocationFromJSONTyped,
    EntLocationToJSON,
    EntUser,
    EntUserFromJSON,
    EntUserFromJSONTyped,
    EntUserToJSON,
} from './';

/**
 * 
 * @export
 * @interface EntClubEdges
 */
export interface EntClubEdges {
    /**
     * 
     * @type {EntActivity}
     * @memberof EntClubEdges
     */
    activity?: EntActivity;
    /**
     * 
     * @type {EntClubTypes}
     * @memberof EntClubEdges
     */
    clubtypes?: EntClubTypes;
    /**
     * 
     * @type {EntLocation}
     * @memberof EntClubEdges
     */
    location?: EntLocation;
    /**
     * 
     * @type {EntUser}
     * @memberof EntClubEdges
     */
    user?: EntUser;
}

export function EntClubEdgesFromJSON(json: any): EntClubEdges {
    return EntClubEdgesFromJSONTyped(json, false);
}

export function EntClubEdgesFromJSONTyped(json: any, ignoreDiscriminator: boolean): EntClubEdges {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'activity': !exists(json, 'Activity') ? undefined : EntActivityFromJSON(json['Activity']),
        'clubtypes': !exists(json, 'Clubtypes') ? undefined : EntClubTypesFromJSON(json['Clubtypes']),
        'location': !exists(json, 'Location') ? undefined : EntLocationFromJSON(json['Location']),
        'user': !exists(json, 'User') ? undefined : EntUserFromJSON(json['User']),
    };
}

export function EntClubEdgesToJSON(value?: EntClubEdges | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'activity': EntActivityToJSON(value.activity),
        'clubtypes': EntClubTypesToJSON(value.clubtypes),
        'location': EntLocationToJSON(value.location),
        'user': EntUserToJSON(value.user),
    };
}


