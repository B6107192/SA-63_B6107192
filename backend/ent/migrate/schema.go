// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"github.com/facebookincubator/ent/dialect/sql/schema"
	"github.com/facebookincubator/ent/schema/field"
)

var (
	// ActivitiesColumns holds the columns for the "activities" table.
	ActivitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "clube_activity_name", Type: field.TypeString},
	}
	// ActivitiesTable holds the schema information for the "activities" table.
	ActivitiesTable = &schema.Table{
		Name:        "activities",
		Columns:     ActivitiesColumns,
		PrimaryKey:  []*schema.Column{ActivitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// ClubsColumns holds the columns for the "clubs" table.
	ClubsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "club_name", Type: field.TypeString},
		{Name: "activity_id", Type: field.TypeInt, Nullable: true},
		{Name: "clubtypes_id", Type: field.TypeInt, Nullable: true},
		{Name: "location_id", Type: field.TypeInt, Nullable: true},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
	}
	// ClubsTable holds the schema information for the "clubs" table.
	ClubsTable = &schema.Table{
		Name:       "clubs",
		Columns:    ClubsColumns,
		PrimaryKey: []*schema.Column{ClubsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:  "clubs_activities_club",
				Columns: []*schema.Column{ClubsColumns[2]},

				RefColumns: []*schema.Column{ActivitiesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "clubs_club_types_club",
				Columns: []*schema.Column{ClubsColumns[3]},

				RefColumns: []*schema.Column{ClubTypesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "clubs_locations_club",
				Columns: []*schema.Column{ClubsColumns[4]},

				RefColumns: []*schema.Column{LocationsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:  "clubs_users_club",
				Columns: []*schema.Column{ClubsColumns[5]},

				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ClubTypesColumns holds the columns for the "club_types" table.
	ClubTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "clube_type_name", Type: field.TypeString},
	}
	// ClubTypesTable holds the schema information for the "club_types" table.
	ClubTypesTable = &schema.Table{
		Name:        "club_types",
		Columns:     ClubTypesColumns,
		PrimaryKey:  []*schema.Column{ClubTypesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// LocationsColumns holds the columns for the "locations" table.
	LocationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "clube_location_name", Type: field.TypeString},
		{Name: "clube_location_address", Type: field.TypeString},
	}
	// LocationsTable holds the schema information for the "locations" table.
	LocationsTable = &schema.Table{
		Name:        "locations",
		Columns:     LocationsColumns,
		PrimaryKey:  []*schema.Column{LocationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "user_name", Type: field.TypeString},
		{Name: "user_email", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:        "users",
		Columns:     UsersColumns,
		PrimaryKey:  []*schema.Column{UsersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		ActivitiesTable,
		ClubsTable,
		ClubTypesTable,
		LocationsTable,
		UsersTable,
	}
)

func init() {
	ClubsTable.ForeignKeys[0].RefTable = ActivitiesTable
	ClubsTable.ForeignKeys[1].RefTable = ClubTypesTable
	ClubsTable.ForeignKeys[2].RefTable = LocationsTable
	ClubsTable.ForeignKeys[3].RefTable = UsersTable
}
