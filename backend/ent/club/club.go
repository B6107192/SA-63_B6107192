// Code generated by entc, DO NOT EDIT.

package club

const (
	// Label holds the string label denoting the club type in the database.
	Label = "club"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCLUBNAME holds the string denoting the club_name field in the database.
	FieldCLUBNAME = "club_name"

	// EdgeLocation holds the string denoting the location edge name in mutations.
	EdgeLocation = "location"
	// EdgeClubtypes holds the string denoting the clubtypes edge name in mutations.
	EdgeClubtypes = "clubtypes"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// EdgeActivity holds the string denoting the activity edge name in mutations.
	EdgeActivity = "activity"

	// Table holds the table name of the club in the database.
	Table = "clubs"
	// LocationTable is the table the holds the location relation/edge.
	LocationTable = "clubs"
	// LocationInverseTable is the table name for the Location entity.
	// It exists in this package in order to avoid circular dependency with the "location" package.
	LocationInverseTable = "locations"
	// LocationColumn is the table column denoting the location relation/edge.
	LocationColumn = "location_id"
	// ClubtypesTable is the table the holds the clubtypes relation/edge.
	ClubtypesTable = "clubs"
	// ClubtypesInverseTable is the table name for the ClubTypes entity.
	// It exists in this package in order to avoid circular dependency with the "clubtypes" package.
	ClubtypesInverseTable = "club_types"
	// ClubtypesColumn is the table column denoting the clubtypes relation/edge.
	ClubtypesColumn = "clubtypes_id"
	// UserTable is the table the holds the user relation/edge.
	UserTable = "clubs"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_id"
	// ActivityTable is the table the holds the activity relation/edge.
	ActivityTable = "clubs"
	// ActivityInverseTable is the table name for the Activity entity.
	// It exists in this package in order to avoid circular dependency with the "activity" package.
	ActivityInverseTable = "activities"
	// ActivityColumn is the table column denoting the activity relation/edge.
	ActivityColumn = "activity_id"
)

// Columns holds all SQL columns for club fields.
var Columns = []string{
	FieldID,
	FieldCLUBNAME,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Club type.
var ForeignKeys = []string{
	"activity_id",
	"clubtypes_id",
	"location_id",
	"user_id",
}

var (
	// CLUBNAMEValidator is a validator for the "CLUB_NAME" field. It is called by the builders before save.
	CLUBNAMEValidator func(string) error
)
